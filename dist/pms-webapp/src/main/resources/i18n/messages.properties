project.name=GET PMS
project.name.pms=PMS
project.name.get=GET
view.signin.title=GET PMS - Sign in
view.index.title=GET PMS

view.projects.title=GET PMS - Projects
view.usermanagement.title=Velcom Solvency Check - User management
view.tasks.title=GET PMS - Tasks

signin.form.title=Please Sign In
signin.form.email=User name
signin.form.password=Password
signin.form.button.signin=Sign in
signin.form.enter.email=Enter user name
signin.form.enter.password=Enter password

menu.item.projects=Projects
menu.item.tasks=Tasks
menu.item.usermanagement=User management

message.dialog.title=Messages
message.dialog.details=Details

# Validation messages
notBlank.message = The value may not be empty!
email.message = The value must be a valid email!

java.lang.Exception=Unknown error. See in log for details.
by.get.pms=Application error. See in log for details.
unknown.error=Unexpected error occurred.
error.description=Status code {0} returned for URI {1} with message {2}

button.logout=Logout
button.ok=OK
button.save=Save
button.cancel=Cancel
button.close=Close
button.yes=Yes

form.noSelection=Provide a value

# Custom validators
ExistingRole=Role does not exist.
UniqueAccountName=Account is already registered in the system.
by.get.pms.validation.Admin.message=This user is not an administrator!
by.get.pms.validation.ProjectManager.message=This user is not a project manager!
by.get.pms.validation.Developer.message=This user is not a developer!

users.createUpdateUser.successfully.added=User successfully added.
users.createUpdateUser.successfully.updated=User with id: {0} successfully updated.

users.createUser.AlreadyExists=User with username: {0} already exists!

users.updateUser.NonExistingRecordForUpdate=User with id: {0} doesn't exist and can't be updated!
users.updateUser.AlreadyExists=User with username: {0} already exists!
users.updateUser.roleUpdate=User's role can't be changed from PROJECT_MANAGER to {0}! He is Project Manager on next projects: {1}!

users.removeUser.NonExistingRecordForRemove=User with id: {0} doesn't exist and can't be removed!
users.removeUser.successfully.removed=User with id: {0} successfully removed.
users.removeUser.pmWithProjects=User can't be removed! He is Project Manager on next projects: {0}!
users.removeUser.userWithTasks=User can't be removed! He has next assigned tasks: {0}!

tasks.createTask.successfully.added=Task successfully added.

tasks.createTask.DeadlineInPast=Task's deadline {0} can't be in past!
tasks.createTask.AlreadyExists=Task with name: {0} already exists!
tasks.updateTask.NonExistingRecordForUpdate=Task with id: {0} doesn't exist and can't be updated!
tasks.updateTask.AlreadyExists=Task with name: {0} already exists!
tasks.removeTask.NonExistingRecordForRemove=Task with id: {0} doesn't exist and can't be removed!
