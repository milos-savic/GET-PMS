## Setting up the development environment

Install the following:

* Oracle Java SDK 1.8
* Maven 3.3.9 and higher

You can use any IDE that has support for maven.


## Build & start webapp

See README.md


## Dependencies

All Maven repositories and dependencies should be declared in dependencies/pom.xml. The idea is to have a central place
where dependency versions are specified instead of them being scattered accross many pom's.
Any terminal (leaf) maven module should have its parent set to the dependencies module, e.g. for commons module we have:

    <parent>
        <groupId>by.get.pms</groupId>
        <artifactId>dependencies</artifactId>
        <version>1.0-SNAPSHOT</version>
        <relativePath>../../dependencies/pom.xml</relativePath>
    </parent>

Dependency declarations in all maven modules (other than dependencies) should not contain <version> element.


## Git settings

The following must be set to avoid unnecessary merge commits:

    git config branch.master.rebase true

This should also be set for every branch by replacing master with the branch name.

When this setting is activated for a branch, git adds the `--rebase` argument to the pull command by default, which means that `git pull` is not making a fetch+merge, but rather fetch+rebase. This means that you won't get the unnecessary merge commits saying "master is merged with master", which have no value at all.

To make this the default behavior for new branches (it does not affect branches already created), run this command:

    git config branch.autosetuprebase always


## Database setup

1. Initial database file (tables without any data) creation should be done with Hibernate (from @Entity classes).
   Configuration:
   liquibase.enabled=false
   spring.jpa.generate-ddl=true
   spring.jpa.hibernate.ddl-auto=create-drop

   Build & start webapp

   Database file: ~/h2db/pms

   This procedure should be repeated every time we add new entity.

2. Creation of Liquibase DDL script (changelog.xml) based on database file.
   cd GET-PMS
   mvn infrastructure/liquibase liquibase:generateChangeLog

   Copy from console output parts related to new entities.

3. Starting database with liquibase:
   Configuration:
   liquibase.enabled=true
   spring.jpa.generate-ddl=false
   spring.jpa.hibernate.ddl-auto=none

   Build & start webapp